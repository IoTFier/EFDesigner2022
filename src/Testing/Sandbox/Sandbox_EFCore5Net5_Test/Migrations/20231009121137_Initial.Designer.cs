// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sandbox_EFCore_Test;

#nullable disable

namespace Sandbox_EFCore_Test.Migrations
{
    [DbContext(typeof(EFModel1))]
    [Migration("20231009121137_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Entity1", "dbo");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity2", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entity2", "dbo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Entity2");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity3", b =>
                {
                    b.Property<long>("Entity1Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Entity2Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("Entity1Id", "Entity2Id");

                    b.HasIndex("Entity2Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Entity3", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity4", b =>
                {
                    b.HasBaseType("Sandbox_EFCore_Test.Entity2");

                    b.Property<int?>("Property1")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Entity4");
                });

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity3", b =>
                {
                    b.HasOne("Sandbox_EFCore_Test.Entity1", "Entity1")
                        .WithMany("Entity3")
                        .HasForeignKey("Entity1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sandbox_EFCore_Test.Entity2", "Entity2")
                        .WithMany("Entity3")
                        .HasForeignKey("Entity2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity1");

                    b.Navigation("Entity2");
                });

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity1", b =>
                {
                    b.Navigation("Entity3");
                });

            modelBuilder.Entity("Sandbox_EFCore_Test.Entity2", b =>
                {
                    b.Navigation("Entity3");
                });
#pragma warning restore 612, 618
        }
    }
}
