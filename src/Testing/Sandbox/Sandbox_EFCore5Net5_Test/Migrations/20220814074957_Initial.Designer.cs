// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sandbox_EFCore5NetCore3_Test;

#nullable disable

namespace Sandbox_EFCore5Net5_Test.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220814074957_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.0-preview.7.22376.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.AnEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Property1")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("AnEntities", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Property1")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Entity1", "dbo", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity2", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FKto1")
                        .HasColumnType("bigint");

                    b.Property<long>("FKto6")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Property1")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FKto1");

                    b.HasIndex("FKto6");

                    b.ToTable("Entity2", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity3", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("TheFK")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TheFK");

                    b.ToTable("Entity3", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity4", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Entity4", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity5", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Entity5", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity6", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("TheFK")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TheFK");

                    b.ToTable("Entity6", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.TestData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TestString")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("TestString")
                        .IsUnique();

                    b.ToTable("TestDatas", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.TestView", b =>
                {
                    b.Property<string>("TestString")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasIndex("TestString")
                        .IsUnique();

                    b.ToTable((string)null);

                    b.ToView("TestView", "dbo");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity2", b =>
                {
                    b.HasOne("Sandbox_EFCore5NetCore3_Test.Entity1", "Entity1")
                        .WithMany("Entity2")
                        .HasForeignKey("FKto1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sandbox_EFCore5NetCore3_Test.Entity6", "Entity6")
                        .WithMany("Entity2")
                        .HasForeignKey("FKto6")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity1");

                    b.Navigation("Entity6");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity3", b =>
                {
                    b.HasOne("Sandbox_EFCore5NetCore3_Test.Entity4", null)
                        .WithMany("Entity3")
                        .HasForeignKey("TheFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity6", b =>
                {
                    b.HasOne("Sandbox_EFCore5NetCore3_Test.Entity5", "Entity5")
                        .WithMany("Entity6")
                        .HasForeignKey("TheFK");

                    b.Navigation("Entity5");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity1", b =>
                {
                    b.Navigation("Entity2");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity4", b =>
                {
                    b.Navigation("Entity3");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity5", b =>
                {
                    b.Navigation("Entity6");
                });

            modelBuilder.Entity("Sandbox_EFCore5NetCore3_Test.Entity6", b =>
                {
                    b.Navigation("Entity2");
                });
#pragma warning restore 612, 618
        }
    }
}
