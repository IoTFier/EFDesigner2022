//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.2.6.1
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Sandbox_EFCore_Test
{
   public partial class Entity3
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Entity3()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Entity3 CreateEntity3Unsafe()
      {
         return new Entity3();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="id">Unique identifier</param>
      /// <param name="entity1id">Foreign key for Entity1.Entity3 &lt;--&gt; Entity3.Entity1. </param>
      /// <param name="entity2id">Foreign key for Entity2.Entity3 &lt;--&gt; Entity3.Entity2. </param>
      /// <param name="entity1">Association class for Entity1</param>
      /// <param name="entity2">Association class for Entity2</param>
      public Entity3(long id, long entity1id, long entity2id, global::Sandbox_EFCore_Test.Entity1 entity1, global::Sandbox_EFCore_Test.Entity2 entity2)
      {
         this.Id = id;

         this.Entity1Id = entity1id;

         this.Entity2Id = entity2id;

         if (entity1 == null) throw new ArgumentNullException(nameof(entity1));
         this.Entity1 = entity1;
         entity1.Entity3.Add(this);

         if (entity2 == null) throw new ArgumentNullException(nameof(entity2));
         this.Entity2 = entity2;
         entity2.Entity3.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="id">Unique identifier</param>
      /// <param name="entity1id">Foreign key for Entity1.Entity3 &lt;--&gt; Entity3.Entity1. </param>
      /// <param name="entity2id">Foreign key for Entity2.Entity3 &lt;--&gt; Entity3.Entity2. </param>
      /// <param name="entity1">Association class for Entity1</param>
      /// <param name="entity2">Association class for Entity2</param>
      public static Entity3 Create(long id, long entity1id, long entity2id, global::Sandbox_EFCore_Test.Entity1 entity1, global::Sandbox_EFCore_Test.Entity2 entity2)
      {
         return new Entity3(id, entity1id, entity2id, entity1, entity2);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Foreign key for Entity1.Entity3 &lt;--&gt; Entity3.Entity1. 
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Foreign key for Entity1.Entity3 <--> Entity3.Entity1. ")]
      public long Entity1Id { get; set; }

      /// <summary>
      /// Identity, Indexed, Required
      /// Foreign key for Entity2.Entity3 &lt;--&gt; Entity3.Entity2. 
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Foreign key for Entity2.Entity3 <--> Entity3.Entity2. ")]
      public long Entity2Id { get; set; }

      /// <summary>
      /// Indexed, Required
      /// Unique identifier
      /// </summary>
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required&lt;br/&gt;
      /// Association class for Entity1
      /// </summary>
      [System.ComponentModel.Description("Association class for Entity1")]
      [System.ComponentModel.DataAnnotations.Display(Name="Association object for Entity1")]
      public virtual global::Sandbox_EFCore_Test.Entity1 Entity1 { get; set; }

      /// <summary>
      /// Required&lt;br/&gt;
      /// Association class for Entity2
      /// </summary>
      [System.ComponentModel.Description("Association class for Entity2")]
      [System.ComponentModel.DataAnnotations.Display(Name="Association object for Entity2")]
      public virtual global::Sandbox_EFCore_Test.Entity2 Entity2 { get; set; }

   }
}

